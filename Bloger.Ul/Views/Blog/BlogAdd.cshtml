@model Blog
@inject SignInManager<User> signInManager

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
@if (signInManager.IsSignedIn(User))
{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";
}
else
{

    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/_UserLayout.cshtml";


}

<h1>Yeni Blog Girişi</h1>


<form method="post" asp-action="BlogAdd" asp-controller="Blog" enctype="multipart/form-data">
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x=>x.BlogTitle,new{@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogTitle)
    <br />
    @*@Html.Label("Blog Görseli")
    @Html.TextBoxFor(x=>x.BlogImage,new{@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogImage)
    <br />*@
    @Html.Label("Kategori")
    @Html.DropDownListFor(x=>x.CategoryId,(List<SelectListItem>)ViewBag.CategoryValues,new{@class="form-control"})
    <br />
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x=>x.BlogContent,15,3, new{@class="form-control"})
    @Html.ValidationMessageFor(x=>x.BlogContent)
    <br />
    <input class="form-control" type="file" name="formFile" id="formFile">
    <span asp-validation-for="BlogImage" class="text-danger"></span>

    <button class="btn btn-primary">Yazıyı Kaydet</button>
</form>



